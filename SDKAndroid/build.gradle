plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}

def filesExcluded = [
        'app.cybrid.sdkandroid.components.*',
        'app.cybrid.sdkandroid.BuildConfig',
        'app.cybrid.sdkandroid.util.DataAccessStrategyKt',
        'app.cybrid.sdkandroid.util.DataAccessStrategy',
        'app.cybrid.sdkandroid.core.Constants',
]

apply from: '../version.gradle'

group 'app.cybrid'
version sdk_version

android {
    compileSdk 32

    defaultConfig {
        minSdk 26
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
        }
        release {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = '1.1.1'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
    }
    namespace 'app.cybrid.sdkandroid'
    buildToolsVersion '31.0.0'
}

configurations.all {

    resolutionStrategy.eachDependency {
        if (requested.name.startsWith("kotlin-") && requested.version == "1.6.20-M1") {
            useVersion("1.6.10")
            because("Jetpack Compose is not yet compatible with 1.6.20-M1")
        }
    }
}

tasks.withType(Test) {
    jvmArgs = ["--add-opens", "java.base/java.lang.invoke=ALL-UNNAMED"]
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {

    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ["-Xjvm-default=enable"]
}

tasks.koverHtmlReport {

    enabled = true
    excludes = filesExcluded
}

tasks.koverXmlReport {

    enabled = true
    excludes = filesExcluded
}

task androidSourcesJar(type: Jar) {

    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'app.cybrid'
            artifactId = 'cybrid-android-sdk'
            version version
            afterEvaluate {
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }
            }
            artifact androidSourcesJar
            pom {
                name = 'Cybrid Android SDK'
                description = 'Android SDK for UI Components'
                url = 'https://cybrid.xyz'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'erick-cybrid'
                        name = 'Erick Sanchez'
                        email = 'erick.sanchez@cybrid.app'
                    }
                }
                scm {
                    url = 'https://github.com/Cybrid-app/Cybrid-SDK/'
                }
            }
        }
    }
}

signing {

    System.out.println("Publish version ${version}")
    def signingPassword = System.getenv('gradle_sonatype_PASSPHRASE')
    def signingKey = null
    if(System.getenv('gradle_sonatype_SECRET')!= null) {
        signingKey = new String(System.getenv('gradle_sonatype_SECRET').decodeBase64())
    }
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}

dependencies {

    // -- Vars
    ext.retrofitVersion = '2.9.0'

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'

    // -- Cybrid API Bank
    implementation('app.cybrid:cybrid-api-bank-kotlin:0.36.6') {
        exclude group:'org.apache.oltu.oauth2', module: 'org.apache.oltu.oauth2.common'
    }

    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.9'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

    // -- Compose
    implementation 'androidx.compose.ui:ui:1.2.1'
    implementation 'androidx.compose.ui:ui-util:1.2.1'
    implementation 'androidx.compose.ui:ui-tooling:1.2.1'
    implementation 'androidx.compose.foundation:foundation:1.2.1'
    implementation 'androidx.compose.material:material:1.2.1'
    implementation 'androidx.compose.runtime:runtime-livedata:1.2.1'
    implementation 'androidx.compose.ui:ui-test-junit4:1.1.1'
    implementation 'androidx.compose.ui:ui-test-manifest:1.2.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation 'androidx.compose.material:material-icons-extended:1.2.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.1'
    testImplementation 'androidx.compose.ui:ui-test-junit4:1.1.1'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.2.1'

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'

    // -- SDK Test
    testImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation "io.mockk:mockk:1.13.1"
    testImplementation 'org.robolectric:robolectric:4.8.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}