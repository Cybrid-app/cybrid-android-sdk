version: 2.1

orbs:
  codecov: codecov/codecov@3.2.4
  android: circleci/android@2.3.0

parameters:
  GHA_Event:
    type: string
    default: ""
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

jobs:

  android-sdk-test:
    docker:
      - image: cimg/android:2023.06.1
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "SDKAndroid/build.gradle" }}
      - run:
          name: Download Dependencies
          command: |
            ./gradlew SDKAndroid:androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "SDKAndroid/build.gradle" }}
      - run:
          name: Run SDK Unit Test
          command: |
            ./gradlew koverXmlReport
      - codecov/upload:
          file: 'SDKAndroid/build/reports/kover/xml/report.xml'

  android-e2e:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2023.06.1
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: v1a
      - android/create-avd:
          avd-name: myavd
          install: true
          system-image: system-images;android-29;default;x86
      - android/start-emulator:
          avd-name: myavd
          no-window: true
      - run:
          name: Run UI Test
          command: |
            ./gradlew app:connectedDebugAndroidTest
      - android/save-gradle-cache:
          cache-prefix: v1a

  android-e2e-for-release:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2023.06.1
    parameters:
        system-image:
            default: android-29;default;x86
            description: |
                Name of system image e.g. "system-images;android-29;default;x86".
                It should match the name seen in the "sdkmanager --list" output.
            type: string
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - android/create-avd:
          avd-name: myavd
          install: true
          system-image: system-images;<<parameters.system-image>>
      - android/start-emulator:
          avd-name: myavd
          no-boot-anim: true
          no-window: true
          no-audio: true
      - run:
          name: Run UI Test
          command: |
            ./gradlew app:connectedDebugAndroidTest

  android-sdk-publish:
    docker:
      - image: cimg/android:2023.06.1
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run: git fetch
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "SDKAndroid/build.gradle" }}
      - run:
          name: Download Dependencies
          command: |
            ./gradlew SDKAndroid:androidDependencies
      - run:
          name: Update version tag
          command: |
            export TAG=$(git describe --tags --abbrev=0)
            sed -i "s/0.0.0/$TAG/" version.gradle
      - run:
          name: Publish Library
          command: |
            ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository

  firebase-robo:
    docker:
      - image: cimg/android:2023.06.1
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: |
              ./gradlew SDKAndroid:androidDependencies
      - run:
          name: Compile Debug App
          command: |
              ./gradlew app:assembleDebug
      - run:
          name: Set Firabse FIREBASE_SERVICE_ACCOUNT_KEY
          command: echo ${FIREBASE_SERVICE_ACCOUNT_KEY} | base64 -di > ${HOME}/client-secret.json
      - run:
          name: Authenticate with Google Cloud
          command: |
              sudo gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
              sudo gcloud --quiet config set project ${FIREBASE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: |
              sudo gcloud firebase test android run \
               --type robo \
               --app app/build/outputs/apk/debug/app-debug.apk \
               --device model=oriole,version=31,locale=en,orientation=portrait \
               --timeout 15m

  demo-app-publish:
    docker:
      - image: cimg/android:2023.06.1
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: |
              ./gradlew SDKAndroid:androidDependencies
      - run:
          name: Compile Debug App
          command: |
              ./gradlew app:assembleDebug
      - run:
          name: Upload app to Appetize
          command: |
              curl --http1.1 https://${APPETIZE_API_TOKEN}@api.appetize.io/v1/apps/${APPETIZE_PUBLIC_API_TOKEN} -F "file=@app/build/outputs/apk/debug/app-debug.apk" -F "platform=android"

  # Exprimental
  android-e2e-parallelism:
    parallelism: 3
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2023.06.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - run: ./gradlew assembleDebugAndroidTest
      - android/save-gradle-cache
      - run:
          name: Split Tests
          command: |
            cd app/src/androidTest/java
            CLASSNAMES=$(circleci tests glob "**/*Test.kt" \
              | sed 's@/@.@g' \
              | sed 's/.kt//' \
              | circleci tests split --split-by=timings --timings-type=classname)
            echo "export GRADLE_ARGS='-Pandroid.testInstrumentationRunnerArguments.class=$(echo $CLASSNAMES | sed -z "s/\n//g; s/ /,/g")'" >> $BASH_ENV
      - android/create-avd:
          avd-name: myavd
          install: true
          system-image: system-images;android-29;default;x86
      - android/start-emulator:
          avd-name: myavd
          no-window: true
          restore-gradle-cache-prefix: v1a
          post-emulator-launch-assemble-command: ""
      - run:
          name: Run UI Test
          command: |
            ./gradlew app:connectedDebugAndroidTest $GRADLE_ARGS
      - android/save-gradle-cache:
          cache-prefix: v1a
      - store_test_results:
          path: ./app/build/outputs/androidTest-results/connected

workflows:
  android-test:
    jobs:
      - android-sdk-test
      - android-e2e:
          filters:
            branches:
              ignore: main
      - android-e2e-for-release:
          matrix:
            parameters:
              system-image:
                - android-33;google_apis;x86_64
                - android-32;google_apis;x86_64
                - android-31;google_apis;x86_64
                - android-30;google_apis;x86
                - android-29;default;x86
                - android-28;default;x86
                - android-27;default;x86
                - android-26;default;x86
          name: e2e-<<matrix.system-image>>
          filters:
            branches:
              only:
                - main
      - android-sdk-publish:
          requires:
            - android-sdk-test
            - android-e2e-for-release
          filters:
            branches:
              only:
                - main
      - firebase-robo:
          requires:
            - android-e2e-for-release
          filters:
            branches:
              only:
                - main
      - demo-app-publish:
          requires:
            - android-e2e-for-release
          filters:
            branches:
              only:
                - main